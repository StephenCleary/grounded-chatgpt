@page "/admin"
@inject OpenAiClientProvider OpenAiClientProvider

<PageTitle>Admin</PageTitle>

<h1>Admin</h1>

<p>Setup parameters</p>

<EditForm Model="@Options" OnSubmit="@Save">
	<div class="form-group">
		<label>OpenAI API Endpoint</label>
		<InputText @bind-Value="Options.Uri" />
	</div>
	<div class="form-group">
		<label>OpenAI API Key</label>
		<InputText @bind-Value="Options.Apikey" type="password" />
	</div>
	<div class="form-group">
		<label>Deployment for Chat</label>
		<InputText @bind-Value="Options.ChatDeployment" />
	</div>
	<div class="form-group">
		<label>Deployment for Completion</label>
		<InputText @bind-Value="Options.ExtractDeployment" />
	</div>

	<button type="submit">Save</button>
</EditForm>

<p>@Message</p>

@code {
	private OpenAIOptions Options { get; set; } = null!;
	private string Message { get; set; } = "";

	protected override async Task OnInitializedAsync()
	{
		Options = OpenAiClientProvider.Options?.Value ?? new OpenAIOptions
		{
			Uri = "https://clearyopenaitest.openai.azure.com/",
			Apikey = "",
			ChatDeployment = "gpt-35-turbo",
			ExtractDeployment = "gpt-35-turbo",
		};
	}

	private void Save()
	{
		OpenAiClientProvider.SetOptions(Options);
		if (OpenAiClientProvider.Client == null)
			Message = $"Saved at {DateTimeOffset.Now}; client NOT created";
		else
			Message = $"Saved at {DateTimeOffset.Now}; good to go!";
	}
}
